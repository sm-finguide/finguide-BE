name: CI/CD using github actions & docker

on: 
  push:
    branches: [ "develop"]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3.2.0

    - name: Permission for gradlew
      run: chmod +x ./finguide/gradlew
      shell: bash

    - name: Build with Gradle
      uses: gradle/actions/setup-gradle@v3.2.0
      with:
        arguments: build
        build-root-directory: /home/runner/work/finguide-BE/finguide-BE/finguide
    - name: Set up application.properties
      run: |
        echo "spring.datasource.url=jdbc:mysql://${{ secrets.ENDPOINT }}/database-1?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC" > src/main/resources/application.properties
        echo "spring.datasource.username=mydb" >> src/main/resources/application.properties
        echo "spring.datasource.password=${{ secrets.DB_PWD }}" >> src/main/resources/application.properties    

    # Docker build & push 
    - name: Docker build & push to Docker hub
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_USERNAME }}/finguide:latest -f finguide/Dockerfile finguide/
        docker push ${{ secrets.DOCKER_USERNAME }}/finguide:latest
    - name: get GitHub IP
      id: ip
      uses: haythem/public-ip@v1.2
 
# Configure AWS Credentials (6) - AWS 접근 권한 취득(IAM)
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    # EC2 배포
    - name: Docker image pull & Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        timeout: 60s
        script: |
          sudo docker stop finguide
          sudo docker rm finguide
          sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/finguide:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/finguide:latest
          sudo docker run -it -d -p 8080:8080 --name finguide ${{ secrets.DOCKER_USERNAME }}/finguide:latest
    - name: Remove IP FROM security group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32     
